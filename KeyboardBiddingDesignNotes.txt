Explanation of the Keyboard Bidding support
-------------------------------------------

The new event listeners and MutationObservers are only set up if the
"Keyboard entry for bidding/play" toggle is enabled in Settings.  So
for people who don't enable that toggle, none of the new listeners or
observers will be used.  Currently this toggle is only checked from
setBiddingButtonEvents, i.e. when when the bidding box becomes
visible.  So if someone starts a table and only then switches on the
toggle, the support doesn't get enabled right then.  We could listen
for the toggle to change at all times but I didn't do that.

Note: In BBO, keyboard bids are of the form levelKey+SuitKey(e.g.,
'1N'), or P(pass) or D(double) or R(redouble) followed by "Enter" for
OK.  The current handlers I believe only work if Confirm Bids is set,
although I haven't really tried things without Confirm Bids set.  It
is probably possible to make it work without Confirm Bids being set if
you think that's important.

From a design consideration, the main difference between keyboard
bidding entry and mouse bidding entry is that in keyboard bidding it
is possible to enter an "insufficient" or "illegal" bid.  Examples
would be typing in "1" and "C" when the auction is already at 1S.  Or
typing in "D" for double when your partner rather than the opps made
the last bid. The base BBO keyboard bid listener of course ignores
such bids but if we just have a listener for keyboard events we would
also have the logic to match the BBO logic rather than automatically
feed them to the findAlert matcher.

A related keyboard bidding quirk is that the key "D" can be
interpreted by BBO as the suit Diamonds if preceded by a legal bid
number or for "Double" if not.  Normally this does not cause any
confusion unless the numeric bid level was "insufficient".  So if the
bidding is at 1S and someone types in 1+D, BBO ignores the 1 part and
treats it as an entry for Double.

It's true that such insufficient mis-bids are probably rare and are
probably unlikely to match anything in findAlert(), so one design
option would be just to ignore the illegality check feed all entries
to findAlert().

Instead, what I tried to do was use the fact that when someone types
the last part of a bid that BBO recognizes, the OK button is
highlighted, and some set of level+suit or Pass or Dbl or Rdbl buttons
will also be highlighted.  So if we can read the highlighted bidding
buttons, we would be in sync with BBO and can put the bid in
"callText" and feed that bid to findAlert().

For some reason the order of this highlighting in BBO is
   1. OK button highlighted
   2. all correct bidding buttons highlighted
(I would have expected the OK button to be the last thing to highlight
but when I tried using the OK button change as the driving force, the
bidding buttons were not always highlighted yett).

For this reason, the mutationObserver for bidding Buttons style
attributes is the one that drives the mapping to callText and calling
findAlert().

The few new entries in functions.js to support the above are probably
obvious.  I converted a few "catch {" statements to "catch (e) {"
because the syntax checker I was using was complaining but that had
nothing to do with the keyboard bidding support.


